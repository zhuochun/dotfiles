#!/usr/bin/env ruby
# encoding: utf-8

# Pass the command to ChatGPT and return the response
#
# Usage: ai-chatgpt prompt [context-file.txt] [-a]
#
# Requires ChatGPT API Key in DOT_OPENAI_KEY

require "net/http"
require "json"

OPENAI_KEY = ENV["DOT_OPENAI_KEY"] || ""
if OPENAI_KEY.empty?
  STDOUT << "Remember to set env DOT_OPENAI_KEY\n"
  exit 9
end

prompt = (ARGV[0] || "").strip
if prompt.empty?
  STDOUT << "No prompt message\n"
  exit 1
end

context_filepath = (ARGV[1] || "").strip
context_file = File.read(context_filepath) unless context_filepath.empty?
# add context after prompt
prompt += "\n" + context_file unless context_file.nil? || context_file.empty?

STDOUT << "PROMPT (Full): #{prompt}\n"

# -a means append prompt response back to file (Not Supported)
append_context = (ARGV[2] || "") == "-a"

url = URI("https://api.openai.com/v1/chat/completions")
headers = {
  "Content-Type" => "application/json",
  "Authorization" => "Bearer #{OPENAI_KEY}"
}

data = {
  "model" => "gpt-3.5-turbo",
  "messages" => [
    {"role": "user", "content": prompt}
  ],
}

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true

request = Net::HTTP::Post.new(url, headers)
request.body = data.to_json

response = http.request(request)

if response.code == "200"
  result = JSON.parse(response.body)
  STDOUT << result["choices"][0]["message"]["content"]
else
  STDOUT << "Error: #{response.code} - #{response.message}\n"
  exit 2
end