# """"""""""""""""""""""""""""""""""""""""""""""""""""""""
# Tmux Configurations
# Author: Wang Zhuochun
# Last Edit: 03/Jan/2016 11:47 PM
# """"""""""""""""""""""""""""""""""""""""""""""""""""""""

# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# Cheatsheet:
# - tmux new -s dev
# - tmux a -t dev
# - tmux ls

# -------------------------------------------------------------------
# Basics
# -------------------------------------------------------------------

# Reload tmux.conf file
bind-key r source-file ~/.tmux.conf \; display "tmux.conf reloaded."

# Increase scrollback lines
set-option -g history-limit 50000

# Mouse is allowed
set-option -g mouse on

# http://homeonrails.com/2016/05/truecolor-in-gnome-terminal-tmux-and-neovim/
# tmux info | grep Tc
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Focus events enabled for terminals that support them
set-option -g focus-events on

# Visual notifications on session activity
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Remove the short delay between prefix and command
set-option -sg escape-time 0
# Allow bind key to be repeated immediately without prefix
set-option -g repeat-time 300
# Tmux messages are displayed for 1 second
set-option -g display-time 1000

# -------------------------------------------------------------------
# Windows and panes
# -------------------------------------------------------------------
# Set window base-index from 1 instead of 0
set-option -g base-index 1
# Set pane base-index from 1 as well
set-option -g pane-base-index 1
# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# Create new window
bind-key a last-window
bind-key t new-window -c "#{pane_current_path}"

# Split panes
bind-key | split-window -h -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Move in panes as Vim
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Cycle through windows
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Resize panes
bind-key -r H resize-pane -L 6
bind-key -r J resize-pane -D 6
bind-key -r K resize-pane -U 6
bind-key -r L resize-pane -R 6
# Resize panes with Meta key
bind-key -n M-h resize-pane -L 3
bind-key -n M-l resize-pane -R 3
bind-key -n M-j resize-pane -D 3
bind-key -n M-k resize-pane -U 3

# Vi is better
set-window-option -g mode-keys vi

# Enter copy-mode on ESC
bind-key Escape copy-mode

# Setup v to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi Y send-keys -X copy-end-of-line
bind-key -T copy-mode-vi Escape send-keys -X cancel

# -------------------------------------------------------------------
# Theme
# -------------------------------------------------------------------
set-option -g status-position top
set-option -g status-justify left
# Refresh interval of status bar
set-option -g status-interval 10

# Generated from edkolev/tmuxline.vim
if-shell "[ -f ~/.tmux-theme.conf ]" 'source ~/.tmux-theme.conf'

# Set window title
set-window-option -g automatic-rename on

# Dynamically update iTerm tab and window titles.
set-option -g set-titles on
set-option -g set-titles-string "#T"

set -g status-left "#[fg=colour16,bg=colour254,bold] #S "
set -g status-right "#[fg=colour236,bg=colour235,nobold,nounderscore,noitalics]#{prefix_highlight}#[fg=colour247,bg=colour235] BATT: #{battery_percentage} ┆ CPU:#{cpu_percentage}#{cpu_icon} ┆ %Y-%m-%d %H:%M %a ┆ ٩(｡◔`◔｡)۶"
# Gruvbox https://github.com/morhetz/gruvbox-contrib
setw -g window-status-format "#[fg=colour244,bg=colour237] #I#[fg=colour250,bg=colour237] #W "
setw -g window-status-current-format "#[fg=colour117,bg=colour31] #I#[fg=colour231,bg=colour31,bold] #W "

# -------------------------------------------------------------------
# Others
# -------------------------------------------------------------------
# Load MacOS config
if-shell "[ -f ~/.tmux-osx.conf ]" 'source ~/.tmux-osx.conf'

# Load local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# Search back to last prompt; searches for non-breaking space in prompt.
bind-key b copy-mode\; send-keys '?~/'\; send-keys enter\; send-keys 'n'

# -------------------------------------------------------------------
# Plugins
# https://github.com/tmux-plugins/tpm
# -------------------------------------------------------------------

# To install use <prefix + I>, to update use <prefix + U>
set -g @plugin 'tmux-plugins/tpm'
# Display battery info
set -g @plugin 'tmux-plugins/tmux-battery'
# Display CPU info
set -g @plugin 'tmux-plugins/tmux-cpu'
# Search with <prefix + />
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# Save complete history: <prefix + alt + shift + p>
# Toggle (start/stop) logging in the current pane: <prefix + shift + p>
set -g @plugin 'tmux-plugins/tmux-logging'

# Initialize tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
